---
# GitLab Connection Settings

# You MUST update this GitLab API token before running the playbook
# For testing, you can generate a personal access token from your GitLab instance:
# 1. Log in to GitLab as root user
# 2. Go to User Settings > Access Tokens
# 3. Create a token with 'api' scope
gitlab_api_token: "your-gitlab-api-token-here"

# Host machine URL for GitLab
# This should be the URL where GitLab is accessible
gitlab_url: "http://your-gitlab-url"

# Set to true if using HTTPS with a valid certificate
gitlab_validate_certs: false

# Git settings for repository initialization
# For testing, you can use any email and name - these don't need to exist
git_user_email: "your.email@example.com"
git_user_name: "Your Name"

# SSH key configuration
# Path to the public SSH key to register with GitLab
# Change this value to match your actual SSH key location if different
ssh_key_path: "~/.ssh/id_ed25519.pub"
ssh_key_title: "Ansible automation key"

# GitLab registry URL - used for Docker image storage
# This should be the registry URL for your GitLab instance
# For Docker image tags, we need to remove the protocol prefix
gitlab_registry_url_with_protocol: "{{ gitlab_url }}:5050"
gitlab_registry_url: "{{ gitlab_url | replace('http://', '') | replace('https://', '') }}:5050"

# GitLab registry password - use the same API token for registry authentication
gitlab_registry_password: "{{ gitlab_api_token }}"